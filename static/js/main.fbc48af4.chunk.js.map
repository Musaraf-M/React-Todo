{"version":3,"sources":["component/AddTodoForm.tsx","component/TodoListItem.tsx","component/TodoList.tsx","App.tsx","index.tsx"],"names":["AddTodoForm","addTodo","useState","newTodo","setNewTodo","toast","useToast","variant","placeholder","value","onChange","e","target","colorScheme","type","px","onClick","preventDefault","title","status","duration","isClosable","TodoListItem","todo","deleteTodo","text","aria-label","icon","isRound","id","TodoList","todos","length","divider","borderColor","borderWidth","padding","borderRadius","width","maxW","base","sm","lg","xl","alignItems","map","p","m","App","JSON","parse","localStorage","getItem","setTodos","useEffect","setItem","stringify","useColorMode","colorMode","toggleColorMode","Fragment","spacing","size","alignSelf","bgGradient","bgClip","mb","newTodos","filter","trim","nanoid","ReactDOM","render","StrictMode","initialColorMode","document","getElementById"],"mappings":"8NAOaA,EAA0C,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAAc,EACxCC,mBAAS,IAD+B,mBAC/DC,EAD+D,KACtDC,EADsD,KAEhEC,EAAQC,cAoBd,OACE,+BAGE,eAAC,IAAD,WACE,cAAC,IAAD,CACEC,QAAQ,SACRC,YAAY,eACZC,MAAON,EACPO,SA5Ba,SAACC,GACpBP,EAAWO,EAAEC,OAAOH,UA6BhB,cAAC,IAAD,CAAQI,YAAY,OAAOC,KAAK,SAASC,GAAG,IAAIC,QA1BjC,SAACL,GACpBA,EAAEM,iBACGd,GASLF,EAAQE,GACRC,EAAW,KATTC,EAAM,CACJa,MAAO,iBACPC,OAAQ,QACRC,SAAU,IACVC,YAAY,KAmBZ,4B,2CC9BKC,EAA2D,SAAC,GAGlE,IAFLC,EAEI,EAFJA,KACAC,EACI,EADJA,WAEA,OACE,eAAC,IAAD,WACE,cAAC,IAAD,UAAOD,EAAKE,OACZ,cAAC,IAAD,IACA,cAAC,IAAD,CACEC,aAAW,SACXC,KAAM,cAAC,IAAD,IACNC,SAAS,EACTZ,QAAS,kBAAMQ,EAAWD,EAAKM,WCb1BC,EAAoC,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,MAAOP,EAAiB,EAAjBA,WACzD,OAAKO,EAAMC,OAST,cAAC,IAAD,CACEC,QAAS,cAAC,IAAD,IACTC,YAAY,WACZC,YAAY,MACZC,QAAQ,IACRC,aAAa,KACbC,MAAM,OACNC,KAAM,CAAEC,KAAM,OAAQC,GAAI,OAAQC,GAAI,OAAQC,GAAI,QAClDC,WAAW,UARb,SAUGb,EAAMc,KAAI,SAACtB,GACV,OACE,cAAC,EAAD,CAA4BA,KAAMA,EAAMC,WAAYA,GAAjCD,EAAKM,SAnB5B,cAAC,IAAD,CAAOhB,YAAY,QAAQiC,EAAE,IAAIC,EAAE,IAAIV,aAAa,KAApD,8B,yBCgDSW,EAhDa,WAAO,IAAD,EACN9C,mBACxB+C,KAAKC,MAAMC,aAAaC,QAAQ,UAAY,OAFd,mBACzBrB,EADyB,KAClBsB,EADkB,KAKhCC,qBAAU,WACRH,aAAaI,QAAQ,QAASN,KAAKO,UAAUzB,MAC5C,CAACA,IAEJ,IATgC,EAqBO0B,cAA/BC,EArBwB,EAqBxBA,UAAWC,EArBa,EAqBbA,gBACnB,OACE,cAAC,IAAMC,SAAP,UACE,eAAC,IAAD,CAAQC,QAAS,EAAjB,UACE,cAAC,IAAD,CACElC,KAAmB,UAAb+B,EAAuB,cAAC,IAAD,IAAW,cAAC,IAAD,IACxC9B,SAAS,EACTkC,KAAK,KACLC,UAAU,WACVrC,aAAW,aACXqB,EAAE,IACF/B,QAAS2C,IAEX,cAAC,IAAD,CACEK,WAAW,iEACXC,OAAO,OACPC,GAAG,IAHL,8BAOA,cAAC,EAAD,CAAUnC,MAAOA,EAAOP,WA3BC,SAACK,GAC9B,IAAMsC,EAAWpC,EAAMqC,QAAO,SAACrC,GAC7B,OAAOA,EAAMF,KAAOA,KAEtBwB,EAASc,MAwBL,cAAC,EAAD,CAAalE,QAjCM,SAACE,GACL,KAAnBA,EAAQkE,QACNhB,EAAS,GAAD,mBAAKtB,GAAL,CAAY,CAAEN,KAAMtB,EAAS0B,GAAIyC,2BCjB/CC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAiBC,iBAAiB,WAClC,cAAC,EAAD,SAGJC,SAASC,eAAe,W","file":"static/js/main.fbc48af4.chunk.js","sourcesContent":["import { Button, HStack, Input, useToast } from \"@chakra-ui/react\";\nimport React, { ChangeEvent, FormEvent, useState } from \"react\";\n\ninterface AddTodoFormProps {\n  addTodo: AddTodo;\n}\n\nexport const AddTodoForm: React.FC<AddTodoFormProps> = ({ addTodo }) => {\n  const [newTodo, setNewTodo] = useState(\"\");\n  const toast = useToast();\n  const handleChange = (e: ChangeEvent<HTMLInputElement>) => {\n    setNewTodo(e.target.value);\n  };\n\n  const handleSubmit = (e: FormEvent<HTMLButtonElement>) => {\n    e.preventDefault();\n    if (!newTodo) {\n      toast({\n        title: \"Todo is empty.\",\n        status: \"error\",\n        duration: 2000,\n        isClosable: true,\n      });\n      return\n    }\n    addTodo(newTodo);\n    setNewTodo(\"\");\n  };\n\n  return (\n    <form>\n      {/* <input type=\"text\" value={newTodo} onChange={handleChange}/>\n            <button type=\"submit\" onClick={handleSubmit}>Add Todo</button> */}\n      <HStack>\n        <Input\n          variant='filled'\n          placeholder='Lets do it !'\n          value={newTodo}\n          onChange={handleChange}\n        />\n        <Button colorScheme='pink' type='submit' px='8' onClick={handleSubmit}>\n          Add Todo\n        </Button>\n      </HStack>\n    </form>\n  );\n};\n","import { HStack, IconButton, Spacer, Text } from \"@chakra-ui/react\";\nimport React from \"react\";\n\nimport { FaTrash } from \"react-icons/fa\";\n\ninterface todoListItemProps {\n  todo: Todo;\n  deleteTodo: DeleteTodo;\n}\n\nexport const TodoListItem: React.FunctionComponent<todoListItemProps> = ({\n  todo,\n  deleteTodo,\n}) => {\n  return (\n    <HStack>\n      <Text>{todo.text}</Text>\n      <Spacer />\n      <IconButton\n        aria-label='Delete'\n        icon={<FaTrash />}\n        isRound={true}\n        onClick={() => deleteTodo(todo.id)}\n      />\n    </HStack>\n  );\n};\n","import { Badge, StackDivider, VStack } from \"@chakra-ui/react\";\nimport React from \"react\";\nimport { TodoListItem } from \"./TodoListItem\";\n\ninterface TodoListProps {\n  todos: Array<Todo>;\n  deleteTodo: DeleteTodo;\n}\n\nexport const TodoList: React.FC<TodoListProps> = ({ todos, deleteTodo }) => {\n  if (!todos.length) {\n    return (\n      <Badge colorScheme='green' p='4' m='4' borderRadius=\"lg\">\n        No Todos, yah !\n      </Badge>\n    );\n  }\n\n  return (\n    <VStack\n      divider={<StackDivider />}\n      borderColor='grey.100'\n      borderWidth='2px'\n      padding='4'\n      borderRadius='lg'\n      width='100%'\n      maxW={{ base: \"90vw\", sm: \"80vw\", lg: \"50vw\", xl: \"40vw\" }}\n      alignItems='stretch'\n    >\n      {todos.map((todo) => {\n        return (\n          <TodoListItem key={todo.id} todo={todo} deleteTodo={deleteTodo} />\n        );\n      })}\n    </VStack>\n  );\n};\n","import React, { useEffect, useState } from \"react\";\nimport { AddTodoForm } from \"./component/AddTodoForm\";\nimport { TodoList } from \"./component/TodoList\";\n\nimport { Heading, IconButton, useColorMode, VStack } from \"@chakra-ui/react\";\nimport { nanoid } from \"nanoid\";\nimport { FaMoon, FaSun } from \"react-icons/fa\";\n\ninterface todo {\n  todos?: Todo;\n}\n\nconst App: React.FC<todo> = () => {\n  const [todos, setTodos] = useState(\n    JSON.parse(localStorage.getItem(\"todos\") || \"[]\")\n  );\n\n  useEffect(() => {\n    localStorage.setItem(\"todos\", JSON.stringify(todos));\n  }, [todos]);\n\n  const addTodo: AddTodo = (newTodo) => {\n    newTodo.trim() !== \"\" &&\n      setTodos([...todos, { text: newTodo, id: nanoid() }]);\n  };\n\n  const deleteTodo: DeleteTodo = (id) => {\n    const newTodos = todos.filter((todos: Todo) => {\n      return todos.id !== id;\n    });\n    setTodos(newTodos);\n  };\n\n  const { colorMode, toggleColorMode } = useColorMode();\n  return (\n    <React.Fragment>\n      <VStack spacing={6}>\n        <IconButton\n          icon={colorMode ==='light' ? <FaSun />: <FaMoon />}\n          isRound={true}\n          size='lg'\n          alignSelf='flex-end'\n          aria-label='color mode'\n          m='5'\n          onClick={toggleColorMode}\n        />\n        <Heading\n          bgGradient='linear-gradient(to right, pink.800,pink.400,pink.200,blue.400)'\n          bgClip='text'\n          mb='8'\n        >\n          Todo Application\n        </Heading>\n        <TodoList todos={todos} deleteTodo={deleteTodo} />\n        <AddTodoForm addTodo={addTodo} />\n      </VStack>\n    </React.Fragment>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { ChakraProvider, ColorModeScript } from \"@chakra-ui/react\";\n\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <ChakraProvider>\n      <ColorModeScript initialColorMode='system' />\n      <App />\n    </ChakraProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}